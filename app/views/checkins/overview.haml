- @colors = ['#b94a48', '#c09853', '#3a87ad', '#468847', '#3C1150', '#F57113', '#F67985', '#ED1328', '#3FCCB9']
%script{:type => "text/javascript", :src => "https://www.google.com/jsapi" }
:javascript
  // Load the Visualization API and the piechart package.
  google.load('visualization', '1.0', {'packages':['corechart', 'geochart', 'gauge', 'controls']});

  
  var overview_chart;
  var geo_chart;
  var geo_data;
  var state_chart;
  var state_data;
  var control;
  
  function handleOverviewSelection() {
    var selection = overview_chart.getChart().getSelection()[0];
    var data = overview_chart.getDataTable();
    var username = data.getColumnLabel(selection.column);
    var date = data.getValue(selection.row, 0);
    var dateStr = date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate();
    
    window.location = "/checkins?start_date=" + dateStr  + "&username[]=" + username;
  }
  
  function handleGeoSelection() {
    console.log(geo_data);
    var selection = geo_chart.getSelection()[0];
    var country = geo_data.getValue(selection.row, 0);
    window.location = "/checkins?country=" + country;
  }

  function handleStateSelection() {
    var selection = state_chart.getSelection()[0];
    var state = state_data.getValue(selection.row, 0);;
    
    window.location = "/checkins?state=" + state;
  }

  function drawChart() {
    var dashboard = new google.visualization.Dashboard(
         document.getElementById('dashboard'));

    // Create the data table.

    var tmp_overview_data = #{@count_by_day_data.to_json};
    var overview_data = new google.visualization.DataTable();

    var headers = tmp_overview_data.shift();
    var date_label = headers.shift();
    var record_count = headers.length;
    overview_data.addColumn('date', date_label);
    $.each(headers, function(i, header) { overview_data.addColumn('number', header); } );
    overview_data.addColumn('number', 'Total Beers Consumed');

    $.each(tmp_overview_data, function(i, row) {
      var date_str = row.shift();
      var date = new Date("20" + date_str.split("/")[2], date_str.split("/")[0] - 1, date_str.split("/")[1]);
      var total = 0
      // sum up the total for today (the first half of the array is today's numbers, the second half is running sum)
      $.each(row.slice(0, row.length/2), function(i, num) { total += num });

      row.unshift(date);
      row.push(total);

      overview_data.addRow(row);
    });
    
    control = new google.visualization.ControlWrapper({
      'controlType': 'ChartRangeFilter',
      'containerId': 'overview_control',
      'options': {
        // Filter by the date axis.
        'filterColumnIndex': 0,
        'ui': {
          'chartType': 'LineChart',
          'chartOptions': {
            'chartArea': {'width': '90%'},
            'hAxis': {'baselineColor': 'none'}
          },
          // Display a single series that shows the closing value of the stock.
          // Thus, this view has two columns: the date (axis) and the stock value (line series).
          'chartView': {
            'columns': [0, record_count+1]
          },
          // 1 day in milliseconds = 24 * 60 * 60 * 1000 = 86,400,000
          'minRangeSize': 86400000
        }
      },
      // Initial range: 2012-02-09 to 2012-03-20.
      'state': {'range': {'start': new Date(2012, 11, 8), 'end': new Date()}}
    });
    
    //var overview_data = google.visualization.arrayToDataTable(tmp_overview_data);

    var count_series = {
      targetAxisIndex: 0,
      type: 'bars'
    };
    var sum_series = { 
      targetAxisIndex: 1,
      type: 'line',
      visibleInLegend: false
    };

    var seriesOptions = {};
    var viewColumns = [];
    for(var i=0; i<=record_count; i++) {
      seriesOptions[i] = (i<(record_count/2)) ? count_series : sum_series;
      viewColumns.push(i);
    }
    console.log(viewColumns);

    var colors = #{@colors.to_json};
    var overview_options = {
      title: 'Beers',
      series: seriesOptions,
      vAxes: [
        { title: "Daily Count"},
        { title: "Running Total"}
      ],
      colors: colors.slice(0, record_count/2),
      legend: { position: 'in'}
    };

    overview_chart = new google.visualization.ChartWrapper({
      chartType: 'LineChart',
      containerId: 'overview_chart',
      options: overview_options,
      view: {
        columns: viewColumns
      }
    });

    dashboard.bind(control, overview_chart)
    dashboard.draw(overview_data)
    
    google.visualization.events.addListener(overview_chart, 'select', handleOverviewSelection)

    //GEO
    geo_chart = new google.visualization.GeoChart(document.getElementById('geo_chart'));
    geo_data = google.visualization.arrayToDataTable(#{@geo_data.to_a.to_json});
    var geo_options = {
      legend: 'none'
    }
    geo_chart.draw(geo_data, geo_options);
    google.visualization.events.addListener(geo_chart, 'select', handleGeoSelection)

    //state
    state_chart = new google.visualization.GeoChart(document.getElementById('state_chart'));
    state_data = google.visualization.arrayToDataTable(#{@state_data.to_a.to_json});
    state_chart.draw(state_data, { 
      region: 'US',
      resolution: 'provinces',
      legend: 'none'
    });
    google.visualization.events.addListener(state_chart, 'select', handleStateSelection)


    var abv_data = google.visualization.arrayToDataTable(#{@abv_data.to_a.to_json})
    var abv_chart = new google.visualization.Gauge(document.getElementById('abv_chart'));
    abv_chart.draw(abv_data, {
      min: 0,
      max: 10,
      yellowColor: '#c09853',
      yellowFrom: 5,
      yellowTo: 7,
      redColor: '#b94a48',
      redFrom: 7,
      redTo: 10
    });
    
  }

  // Set a callback to run when the Google Visualization API is loaded.
  google.setOnLoadCallback(drawChart);

.navbar.navbar-fixed-top.navbar-inverse
  .navbar-inner
    .container
      %a.brand{:href => "/"} 
        %img.logo{:src => "//assets.leaderbeerd.com/images/logo.png"}
        Leaderbeerd
      %ul.nav
        %li 
          %a{:href => "#overview_container"} Overview
        %li 
          %a{:href => "#abv_container"} ABV
        %li 
          %a{:href => "#geo_container"} Geography

.overview
  .alert.alert-success.fade.in
    #{@most_recent_checkin.username} checked in 
    %a{:href => "/checkins/#{@most_recent_checkin.checkin_id}"}
      #{@most_recent_checkin.beer_name}
    %a.close{:href => "", "data-dismiss" => "alert"}x
    
  %h2 Overview
  .row
    = haml :"checkins/_session_filters"
    
  #dashboard
    #overview_container.row
      #overview_chart.chart
      #overview_control

  #abv_container.row
    %h2 Average Alcohol By Volume (%)
    #abv_chart

  #style_and_brewery_container.row
    

  #geo_container.row
    %h2 Beers of the World (#)
    #state_chart.chart
    #geo_chart.chart
